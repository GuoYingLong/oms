basePath: /api/v1
definitions:
  controllers.FileInfo:
    properties:
      children_ids:
        items:
          type: string
        type: array
      childrenCount:
        type: integer
      ext:
        type: string
      icon:
        type: string
      id:
        type: string
      isDir:
        type: boolean
      isHidden:
        type: boolean
      isSymlink:
        type: boolean
      modDate:
        type: string
      name:
        type: string
      parentId:
        type: string
      size:
        type: integer
    type: object
  controllers.FilePath:
    properties:
      files:
        items:
          $ref: '#/definitions/controllers.FileInfo'
        type: array
      folderChains:
        items:
          $ref: '#/definitions/controllers.FileInfo'
        type: array
    type: object
  models.Group:
    properties:
      id:
        type: integer
      mode:
        description: 0.主机模式, 1.其他匹配模式主机不生效
        type: integer
      name:
        type: string
      params:
        type: string
    type: object
  models.Host:
    properties:
      addr:
        type: string
      group:
        $ref: '#/definitions/models.Group'
      group_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      port:
        type: integer
      private_key_id:
        type: integer
      status:
        type: boolean
      tags:
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      tunnels:
        items:
          $ref: '#/definitions/models.Tunnel'
        type: array
      user:
        type: string
      vnc_port:
        type: integer
    type: object
  models.HostExport:
    properties:
      addr:
        type: string
      group:
        type: string
      groupParams:
        type: string
      keyFile:
        type: string
      keyName:
        type: string
      keyPhrase:
        type: string
      name:
        type: string
      passWord:
        type: string
      port:
        type: integer
      tags:
        items:
          type: string
        type: array
      user:
        type: string
      vncport:
        type: integer
    type: object
  models.Job:
    properties:
      cmd:
        type: string
      cmd_id:
        type: integer
      cmd_type:
        type: string
      execute_id:
        type: integer
      execute_type:
        type: string
      id:
        type: integer
      instances:
        items:
          $ref: '#/definitions/models.TaskInstance'
        type: array
      name:
        type: string
      spec:
        type: string
      status:
        type: string
      type:
        type: string
    type: object
  models.PlayBook:
    properties:
      id:
        type: integer
      name:
        type: string
      steps:
        items:
          $ref: '#/definitions/models.Step'
        type: array
    type: object
  models.PrivateKey:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Step:
    properties:
      caches:
        type: string
      name:
        type: string
      params:
        type: string
      seq:
        type: integer
      type:
        type: string
    type: object
  models.Tag:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.TaskInstance:
    properties:
      end_time:
        type: string
      id:
        type: integer
      job_id:
        type: integer
      log_data:
        type: string
      log_path:
        type: string
      start_time:
        type: string
      status:
        type: string
      uid:
        type: string
    type: object
  models.Tunnel:
    properties:
      destination:
        type: string
      error_msg:
        type: string
      host_id:
        type: integer
      id:
        type: integer
      mode:
        type: string
      source:
        type: string
      status:
        type: integer
    type: object
  payload.Response:
    properties:
      code:
        type: string
      data: {}
      msg:
        type: string
      type:
        description: data msg error
        type: string
    type: object
  ssh.Result:
    properties:
      addr:
        type: string
      host_id:
        type: integer
      hostname:
        type: string
      msg:
        type: string
      seq:
        type: integer
      status:
        type: boolean
    type: object
  ssh.Schema:
    properties:
      desc:
        type: string
      schema: {}
      type:
        type: string
    type: object
info:
  contact: {}
paths:
  /cache/upload:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 上传临时文件
      parameters:
      - description: multi文件
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 上传临时文件
      tags:
      - player
  /group:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有组
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Group'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有组
      tags:
      - group
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建组
      parameters:
      - description: 组名称
        in: formData
        name: name
        required: true
        type: string
      - description: 组参数
        in: formData
        name: params
        type: string
      - description: 组类型
        in: formData
        name: mode
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 创建组
      tags:
      - group
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 更新组
      parameters:
      - description: 组 ID
        in: formData
        name: id
        required: true
        type: integer
      - description: 组名称
        in: formData
        name: name
        type: string
      - description: 组参数
        in: formData
        name: params
        type: string
      - description: 组类型
        in: formData
        name: mode
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 更新组
      tags:
      - group
  /group/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除组
      parameters:
      - description: 组 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除组
      tags:
      - group
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取单个组
      parameters:
      - description: 组 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Group'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取单个组
      tags:
      - group
  /host:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有主机
      parameters:
      - description: 页码数
        in: query
        name: page_num
        type: integer
      - default: 20
        description: 分页尺寸
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Host'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有主机
      tags:
      - host
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建主机
      parameters:
      - description: 主机名称
        in: formData
        name: hostname
        required: true
        type: string
      - description: 用户名
        in: formData
        name: user
        required: true
        type: string
      - description: 地址
        in: formData
        name: addr
        required: true
        type: string
      - description: SSH端口
        in: formData
        name: port
        required: true
        type: integer
      - description: SSH密码
        in: formData
        name: password
        type: string
      - description: 组ID
        in: formData
        name: group
        type: integer
      - description: 密钥ID
        in: formData
        name: private_key_id
        type: integer
      - description: 标签ID列表序列化字符串
        in: formData
        name: tags
        type: string
      - description: VNC端口
        in: formData
        name: vnc_port
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Host'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 创建主机
      tags:
      - host
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 更新主机
      parameters:
      - description: 主机 ID
        in: formData
        name: id
        required: true
        type: integer
      - description: 主机名称
        in: formData
        name: hostname
        type: string
      - description: 用户名
        in: formData
        name: user
        type: string
      - description: 地址
        in: formData
        name: addr
        type: string
      - description: SSH端口
        in: formData
        name: port
        type: integer
      - description: SSH密码
        in: formData
        name: password
        type: string
      - description: 组ID
        in: formData
        name: group
        type: integer
      - description: 密钥ID
        in: formData
        name: private_key_id
        type: integer
      - description: 标签ID列表序列化字符串
        in: formData
        name: tags
        type: string
      - description: VNC端口
        in: formData
        name: vnc_port
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Host'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 更新主机
      tags:
      - host
  /host/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除主机
      parameters:
      - description: 主机 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除主机
      tags:
      - host
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取单个主机
      parameters:
      - description: 主机 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Host'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取单个主机
      tags:
      - host
  /job:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有任务
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Job'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有任务
      tags:
      - job
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建任务
      parameters:
      - description: 任务名称
        in: formData
        name: name
        required: true
        type: string
      - description: 任务类型
        example: cron,local
        in: formData
        name: type
        required: true
        type: string
      - description: Cron表达式
        in: formData
        name: spec
        type: string
      - description: 任务命令
        in: formData
        name: cmd
        type: string
      - description: 剧本ID
        in: formData
        name: cmd_id
        type: integer
      - description: 任务命令类型
        example: cmd,player
        in: formData
        name: cmd_type
        required: true
        type: string
      - description: 执行者 ID
        in: formData
        name: execute_id
        required: true
        type: integer
      - description: 执行者类型
        example: host,group,tag
        in: formData
        name: execute_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 创建任务
      tags:
      - job
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 更新任务
      parameters:
      - description: 任务 ID
        in: formData
        name: id
        required: true
        type: integer
      - description: 任务名称
        in: formData
        name: name
        type: string
      - description: 任务类型
        example: cron,local
        in: formData
        name: type
        type: string
      - description: Cron表达式
        in: formData
        name: spec
        type: string
      - description: 任务命令
        in: formData
        name: cmd
        type: string
      - description: 剧本ID
        in: formData
        name: cmd_id
        type: integer
      - description: 任务命令类型
        example: cmd,player
        in: formData
        name: cmd_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 更新任务
      tags:
      - job
  /job/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除任务
      parameters:
      - description: 任务 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除任务
      tags:
      - job
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取单个任务
      parameters:
      - description: 任务 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取单个任务
      tags:
      - job
  /job/start:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 启动任务, 对于task任务类型来说执行一次, 对于cron类型来说开始调度
      parameters:
      - description: 任务 ID
        in: formData
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 启动任务
      tags:
      - job
  /job/stop:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 停止任务, 对于task任务类型来无作用, 对于cron类型来说停止调度
      parameters:
      - description: 任务 ID
        in: formData
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Job'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 停止任务
      tags:
      - job
  /player:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有剧本
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PlayBook'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有剧本
      tags:
      - player
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建剧本
      parameters:
      - description: 剧本名称
        in: formData
        name: name
        required: true
        type: string
      - description: 剧本步骤序列化字符串
        example: '[{"seq":0,"type":"cmd","name":"执行ls","caches":"null","params":"{\"cmd\":\"ls\"}"}]'
        in: formData
        name: steps
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.PlayBook'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 创建剧本
      tags:
      - player
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 更新剧本
      parameters:
      - description: 剧本 ID
        in: formData
        name: id
        required: true
        type: integer
      - description: 剧本名称
        in: formData
        name: name
        type: string
      - description: 剧本步骤序列化字符串
        example: '[{"seq":0,"type":"cmd","name":"执行ls","caches":"null","params":"{\"cmd\":\"ls\"}"}]'
        in: formData
        name: steps
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.PlayBook'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 更新剧本
      tags:
      - player
  /player/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除剧本
      parameters:
      - description: 剧本 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除剧本
      tags:
      - player
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取单个剧本
      parameters:
      - description: 剧本 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.PlayBook'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取单个剧本
      tags:
      - player
  /private_key:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有密钥
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PrivateKey'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有密钥
      tags:
      - private_key
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建密钥
      parameters:
      - description: 密钥名称
        in: formData
        name: name
        required: true
        type: string
      - description: 密钥密码
        in: formData
        name: passphrase
        type: string
      - description: 密钥文件
        in: formData
        name: key_file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.PrivateKey'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 创建密钥
      tags:
      - private_key
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 更新密钥
      parameters:
      - description: 密钥 ID
        in: formData
        name: id
        required: true
        type: integer
      - description: 密钥名称
        in: formData
        name: name
        type: string
      - description: 密钥密码
        in: formData
        name: passphrase
        type: string
      - description: 密钥文件
        in: formData
        name: key_file
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.PrivateKey'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 更新密钥
      tags:
      - private_key
  /private_key/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除密钥
      parameters:
      - description: 密钥 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除密钥
      tags:
      - private_key
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取单个密钥
      parameters:
      - description: 密钥 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.PrivateKey'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取单个密钥
      tags:
      - private_key
  /schema:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有插件Schema
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/ssh.Schema'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有插件Schema
      tags:
      - player
  /tag:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有标签
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Tag'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有标签
      tags:
      - tag
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建标签
      parameters:
      - description: 标签名称
        in: formData
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Tag'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 创建标签
      tags:
      - tag
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 更新标签
      parameters:
      - description: 标签 ID
        in: formData
        name: id
        required: true
        type: integer
      - description: 标签名称
        in: formData
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Tag'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 更新标签
      tags:
      - tag
  /tag/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除标签
      parameters:
      - description: 标签 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除标签
      tags:
      - tag
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取单个标签
      parameters:
      - description: 标签 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Tag'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取单个标签
      tags:
      - tag
  /task/instance:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除任务执行结果
      parameters:
      - description: 任务 ID
        in: formData
        name: job_id
        type: integer
      - description: 截止时间戳(之前的数据都将删除)
        in: formData
        name: time_stamp
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除任务执行结果
      tags:
      - job
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有任务执行结果
      parameters:
      - description: 任务 ID
        in: query
        name: job_id
        type: integer
      - description: 页码数
        in: query
        name: page_num
        type: integer
      - default: 20
        description: 分页尺寸
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.TaskInstance'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有任务执行结果
      tags:
      - job
  /task/instance/log/get:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取任务执行日志
      parameters:
      - description: 执行记录 ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取任务执行日志
      tags:
      - tool
  /tools/browse:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 目录列表
      parameters:
      - description: 远端文件路径
        in: query
        name: id
        required: true
        type: string
      - description: 主机 ID
        in: query
        name: host_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/controllers.FilePath'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 目录列表
      tags:
      - tool
  /tools/cmd:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 执行一条命令
      parameters:
      - description: 执行者 ID
        in: query
        name: id
        required: true
        type: integer
      - description: 执行者类型
        example: host,group,tag
        in: query
        name: type
        required: true
        type: string
      - description: 命令
        in: query
        name: cmd
        required: true
        type: string
      - description: 是否sudo执行
        in: query
        name: sudo
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/ssh.Result'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 执行一条命令
      tags:
      - tool
  /tools/delete:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除文件
      parameters:
      - description: 远端文件路径
        in: formData
        name: id
        required: true
        type: string
      - description: 主机 ID
        in: formData
        name: host_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除文件
      tags:
      - tool
  /tools/download:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 下载文件
      parameters:
      - description: 远端文件路径
        in: query
        name: id
        required: true
        type: string
      - description: 主机 ID
        in: query
        name: host_id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 下载文件
      tags:
      - tool
  /tools/export:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 导出资产文件csv
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 导出资产文件csv
      tags:
      - tool
  /tools/import:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 导入资产文件csv
      parameters:
      - description: csv文件
        in: formData
        name: files
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.HostExport'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 导入资产文件csv
      tags:
      - tool
  /tools/mkdir:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建文件夹
      parameters:
      - description: 远端文件路径
        in: formData
        name: id
        required: true
        type: string
      - description: 主机 ID
        in: formData
        name: host_id
        required: true
        type: integer
      - description: 远端目录地址
        in: formData
        name: dir
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 创建文件夹
      tags:
      - tool
  /tools/preview:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 文件预览
      parameters:
      - description: 远端文件路径
        in: query
        name: id
        required: true
        type: string
      - description: 主机 ID
        in: query
        name: host_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 文件预览
      tags:
      - tool
  /tools/upload:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 上传文件到主机
      parameters:
      - description: 预处理文件列表
        example: '{"filename base64": "file.size"}'
        in: header
        name: X-Files
        required: true
        type: string
      - description: 执行者 ID
        in: formData
        name: id
        required: true
        type: integer
      - description: 执行者类型
        example: host,group,tag
        in: formData
        name: type
        required: true
        type: string
      - description: 远端文件夹
        in: formData
        name: remote
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 上传文件到主机
      tags:
      - tool
  /tunnel:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取所有隧道
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Tunnel'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取所有隧道
      tags:
      - tunnel
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 创建隧道
      parameters:
      - description: 隧道模式
        example: local,remote
        in: formData
        name: mode
        required: true
        type: string
      - description: 源地址
        in: formData
        name: source
        required: true
        type: string
      - description: 目的地址
        in: formData
        name: destination
        required: true
        type: integer
      - description: 主机 ID
        in: formData
        name: host_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Tunnel'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 创建隧道
      tags:
      - tunnel
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 更新隧道
      parameters:
      - description: 隧道 ID
        in: formData
        name: id
        required: true
        type: integer
      - description: 隧道模式
        example: local,remote
        in: formData
        name: mode
        type: string
      - description: 源地址
        in: formData
        name: source
        type: string
      - description: 目的地址
        in: formData
        name: destination
        type: integer
      - description: 主机 ID
        in: formData
        name: host_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Tunnel'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 更新隧道
      tags:
      - tunnel
  /tunnel/{id}:
    delete:
      consumes:
      - application/x-www-form-urlencoded
      description: 删除隧道
      parameters:
      - description: 隧道 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payload.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 删除隧道
      tags:
      - group
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取单个隧道
      parameters:
      - description: 隧道 ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/payload.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Tunnel'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/payload.Response'
      summary: 获取单个隧道
      tags:
      - tunnel
swagger: "2.0"
